{"version":3,"sources":["components/charts-theme.js","components/SideBAR.js","components/TileView.js","components/ChartTile.js","components/config.js","components/App.js","index.js","components/images/covid.jpg"],"names":["window","FusionCharts","register","name","theme","base","chart","bgAlpha","canvasBgAlpha","baseFont","bgColor","baseFontSize","baseFontBold","chartMargin","canvasBottomMargin","canvasTopMargin","canvasRightMargin","canvasLeftMargin","showBorder","showCanvasBorder","baseFontColor","captionFontBold","captionFontSize","subCaptionFontSize","tooltipColor","tooltipBgColor","tooltipBgAlpha","toolTipBorderAlpha","toolTipBorderRadius","showValues","legendBgAlpha","legendBorderAlpha","legendBorderThickness","labelDisplay","useEllipsesWhenOverflow","dataEmptyMessage","column2d","placeValuesInside","usePlotGradientColor","showAlternateVGridColor","divLineAlpha","divLineColor","paletteColors","palette","valuePadding","yAxisNamePadding","xAxisNamePadding","xAxisNameFontSize","valueFontBold","valueFontSize","plotToolText","captionAlignment","labelStep","SideBAR","props","_this","Object","classCallCheck","this","countries","possibleConstructorReturn","getPrototypeOf","call","updatePlace","e","onChange","currentTarget","getAttribute","setState","menuOpen","countryList","state","loading","country","isOpen","_this2","react_default","a","createElement","BurgerMenu","Overlay","disableOverlayClick","pageWrapId","right","width","innerWidth","height","style","maxWidth","onStateChange","handleStateChange","map","la","Button","key","toString","className","size","value","onClick","color","React","Component","Container","styled","div","_templateObject","TileView","Flip_default","top","place","date","build_default","start","prev","end","data","duration","ChartTile_templateObject","ReactFC","fcRoot","Charts","ChartTile","ChartTile_Container","Reveal_default","effect","ReactFC_default","type","dataFormat","containerBackgroundOpacity","dataSource","caption","cap","subCaption","sub","yAxisName","yname","xAxisName","xname","showAlternateHGridColor","config","App_templateObject","Nav","nav","_templateObject2","url1","concat","url2","url3","url4","url5","url6","App","updateDate","event","getData","selectedValue","selectedPlace","sidebarselect","placename","arg","rowsnewconf","rowsnewdeath","rowsnewrec","rowsconf","rowsdeath","rowsrec","newcasesdata1","newDeathsData1","newRecovData1","casesData1","deathsData1","recovData1","dates","dropdownOptions","date_pos","totCasesprevval","totDeathsprevval","totRecovprevval","i","length","newconfdataall","newdeathdataall","newrecdataall","confdataall","deathdataall","recdataall","country_list","keys","splice","pos","values","push","label","Date","displayValue","console","log","newCases","newDeaths","newRecov","totalCases","totalDeaths","totalRecov","newCasesData","newDeathsData","newRecovData","casesData","deathsData","recovData","totCasesprev","totDeathsprev","totRecovprev","items","allplaces","newRecovDataall","loaded","steps","target","content","axios","all","get","then","spread","res1","res2","res3","res4","res5","res6","newconfdata","valueRanges","newdeathdata","newrecdata","recdata","confdata","deathdata","dropdownOptions1","newconobj","newdeathobj","newrecobj","confobj","deathobj","recovobject","j","World","App_Container","components_SideBAR","href","id","backgroundImage","covid","dist_default","options","placeholder","components_TileView","components_ChartTile","ReactDOM","render","src_components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1e2df258.chunk.js","sourcesContent":["window.FusionCharts.register(\"theme\", {\n  name: \"fusion\",\n  theme: {\n    base: {\n      chart: {\n        bgAlpha: \"8\",\n        canvasBgAlpha: \"0\",\n        baseFont: \"basefont-regular\",\n        bgColor: \"#bff1f0\",\n        baseFontSize: \"14\",\n        baseFontBold: \"0\",\n        chartMargin: \"10\",\n        canvasBottomMargin: \"0\",\n        canvasTopMargin: \"0\",\n        canvasRightMargin: \"0\",\n        canvasLeftMargin: \"0\",\n        showBorder: \"0\",\n        showCanvasBorder: \"0\",\n        baseFontColor: \"#rgb(0,0,0)\t\",\n        captionFontBold: \"1\",\n        captionFontSize: \"20\",\n        subCaptionFontSize: \"14\",\n        tooltipColor: \"#FFFFFF\",\n        tooltipBgColor: \"#000000\",\n        tooltipBgAlpha: \"100\",\n        // tooltipPadding: \"5\",\n        toolTipBorderAlpha: \"10\",\n        toolTipBorderRadius: \"3\",\n        showValues: \"0\",\n        legendBgAlpha: \"0\",\n        legendBorderAlpha: \"0\",\n        legendBorderThickness: \"0\",\n        labelDisplay: \"auto\",\n        // rotateLabels: \"45\",\n        useEllipsesWhenOverflow:\"0\",\n        // slantLabel: \"0\",\n        dataEmptyMessage: \"Loading Data...\",\n      }\n    },\n\n    column2d: {\n      chart: {\n        placeValuesInside: \"0\",\n        usePlotGradientColor: \"0\",\n        showAlternateVGridColor: \"1\",\n        // chartMargin: \"5\",\n        // canvasMargin: \"5\",\n        divLineAlpha: \"10\",\n        divLineColor: \"#rgb(0,0,0)\",\n        paletteColors: \"FF0040\",\n        palette :\"5\",\n        valuePadding: \"10\",\n        // yAxisNameFontSize: \"12\",\n        yAxisNamePadding: \"20px\",\n        xAxisNamePadding: \"20px\",\n        xAxisNameFontSize: \"14\",\n        labelDisplay: \"auto\",\n        useEllipsesWhenOverflow:\"0\",\n        valueFontBold: \"0\",\n        valueFontSize: \"14\",\n        plotToolText: \"<div>$label<br><b>$value</b>\",\n        captionAlignment: \"center\",\n        // captionPadding: \"20\",\n        dataEmptyMessage: \"Loading Data...\",\n        labelStep:\"20\"\n      }\n    },\n\n\n\n  }\n});\n","import React from \"react\";\r\nimport { bubble as Menu } from 'react-burger-menu';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport Button from '@material-ui/core/Button';\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\n\r\nclass SideBAR extends  React.Component {\r\n    constructor(props) {\r\n        let countries=[]\r\n        super(props)\r\n        countries=((this.props.countryList))\r\n        this.state={\r\n            loading:false,\r\n            menuOpen:false,\r\n            country:countries[0],\r\n            countries:countries\r\n        } \r\n        this.setState({\r\n            loading:true\r\n        })\r\n    }\r\n    handleStateChange (state) {\r\n        this.setState({menuOpen: state.isOpen})  \r\n    } \r\n    updatePlace=(e) =>{\r\n        this.props.onChange(e.currentTarget.getAttribute('value'))\r\n        this.setState({\r\n            menuOpen: false,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n                <Menu   \r\n                    Overlay\r\n                    disableOverlayClick\r\n                    pageWrapId={ \"page-wrap\" } \r\n                    right width={window.innerWidth > 800?\"15%\":\"30%\"} height={\"100%\"}\r\n                    style={{maxWidth:\"100px\"}}\r\n                    isOpen={this.state.menuOpen} \r\n                    onStateChange={(state) => this.handleStateChange(state)}>\r\n                    <div >\r\n                        {this.state.countries.map((la)=>\r\n                            <Button key={la.toString()} \r\n                                className=\"menu-item\" \r\n                                size=\"small\" \r\n                                value={la}\r\n                                onClick={this.updatePlace}\r\n                                style={{width:\"100%\",color:\"black\"}}>\r\n                                                    {la}\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Menu>             \r\n\r\n        )\r\n    }\r\n}\r\nexport default SideBAR;","import React from \"react\";\nimport styled from 'styled-components';\nimport CountUp from 'react-countup';\nimport Flip from 'react-reveal/Flip';\n\nconst Container = styled.div``;\n\nclass TileView extends React.Component {\n    render() {\n        return(\n          <Container className=\"col-lg-4 col-sm-6 is-dark-text\">\n            <Flip top>\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\n                    {window.innerWidth > 760?\n                      \"is-red-text text-small\":\"is-red-text text-large\"}>\n                    {this.props.name} in {this.props.place} on {this.props.date}\n                  </Container>\n                </Container>\n                <Container className=\"card-value  is-dark-text text-x-large\">\n                  <span className=\"text-large pr-1\"></span>\n                  <CountUp start={this.props.prev} end={this.props.data} duration={1}/>\n                </Container>\n              </Container>\n            </Flip>\n          </Container>\n        )\n    }\n}\nexport default TileView","import React from \"react\";\nimport styled from 'styled-components'\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport \"./charts-theme\";\nimport Reveal from 'react-reveal/Reveal';\n\n\nconst Container = styled.div``;\nReactFC.fcRoot(FusionCharts, Charts );\n\n\nclass ChartTile extends React.Component {\n\n    render() {\n        return(\n            <Container className=\"col-md-12 mb-4 is-light-text\">\n              <Reveal effect=\"fadeInUp\">\n                <Container className=\"card chart-card is-dark-text\">\n                  <Container className=\"chart-container large full-height\">\n                    <ReactFC\n                      {...{\n                        type: \"column2d\",\n                        width: \"100%\",\n                        // height: \"100%\",\n                        dataFormat: \"json\",\n                        containerBackgroundOpacity: \"100%\",\n                        dataEmptyMessage: \"Loading Data...\",\n                        dataSource: {\n                          chart: {\n                            theme: \"fusion\",\n                            bgColor: \"#e5e5e5\",\n                            bgAlpha: \"20\",\n                            caption: this.props.cap,\n                            subCaption: this.props.sub,\n                            yAxisName: this.props.yname,\n                            xAxisName: this.props.xname,\n                            showAlternateHGridColor:0,\n                          },\n                          data: this.props.data\n                        }\n                      }}\n                    />\n                  </Container>\n                </Container>\n              </Reveal>\n            </Container>\n        )\n    }\n}\nexport default ChartTile;","export default {\n    apiKey: 'AIzaSyCS5s_wrshhJskdUvoIwDUHyBdmKtJQkkw',\n    spreadsheetId1: '1Q8FDAvOLv7mTOjJ-2JdCY9WXfSK6MuSvLThz8UxKwy0',\n    spreadsheetId2: '1aLDxKvJ_WbdKcKAOo4dCURfw57rxUMDeEcQL1hbF1X4',\n    spreadsheetId3: '18ctO7893v4N0TKKPTNjipaeBAikrv7CZTIINXBihPqg',\n    spreadsheetId4: '1mkC8PKekOAdAyUrSxHFTnzWRQzhDfYLiP_iI354t8_0',\n    spreadsheetId5: '1C4z204YLFD-WvmWKesYxIAnyn4zQaWP7oklINS776aM',\n    spreadsheetId6: '1by-3Brxla8yqPIQokAQDZm87lL8IdTds6i6r-gnR8Qg',\n}\n\n","import React from \"react\";\nimport axios from \"axios\"\nimport Dropdown from \"react-dropdown\";\nimport styled from 'styled-components';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './App.css';\n\n\nimport covid from \"./images/covid.jpg\";\nimport Sidebar from \"./SideBAR\";\nimport TileView from \"./TileView\";\nimport ChartTitle from \"./ChartTile\";\nimport config from \"./config\";\n\nconst Container = styled.div``;\nconst Nav = styled.nav``;\n\nconst url1 = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId1\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\nconst url2 = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId2\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\nconst url3 = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId3\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\nconst url4 = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId4\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\nconst url5 = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId5\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\nconst url6 = `https://sheets.googleapis.com/v4/spreadsheets/${\n  config.spreadsheetId6\n}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOptions: [],\n      selectedValue: null,\n      selectedPlace: 'World',\n      allplaces:[],\n      newCases:null,\n      newDeaths:null,\n      newRecov:null,\n      totCasesprev:0,\n      totDeathsprev:0,\n      totRecovprev:0,\n      totalCases:null,\n      totalDeaths:null,\n      totalRecov:null,\n      casesData:[],\n      deathsData:[],\n      recovData:[],\n      newCasesData:[],\n      newDeathsData:[],\n      newRecovDataall:[],\n      newconfdataall: [],\n      newdeathdataall: [],\n      newrecdataall: [],\n      confdataall: [],\n      deathdataall: [],\n      recdataall: [], \n      loaded: false,    \n      steps: [\n        {\n            target: \".my-first-step\",\n            content: \"Go back to home page\"\n        },\n        {\n            target: \".my-second-step\",\n            content: \"Select the reported date\"\n        },\n        {\n          target: \".my-third-step\",\n          content: \"Select the country\"\n        },\n        {\n          target: \".my-fourth-step\",\n          content: \"Details of the newcases and total cases\"\n        },\n        {\n          target: \".my-fifth-step\",\n          content: \"Daily cases, deaths, recoveries \"\n        }\n    ]\n    };\n  }\n  async componentDidMount(){\n    await axios.all([\n      axios.get(url1),\n      axios.get(url2),\n      axios.get(url3),\n      axios.get(url4),\n      axios.get(url5),\n      axios.get(url6)\n    ])\n    .then(axios.spread((res1,res2,res3,res4,res5,res6) => {\n      let newconfdata = res1.data.valueRanges[0].values;\n      let newdeathdata = res2.data.valueRanges[0].values;\n      let newrecdata = res3.data.valueRanges[0].values;\n      let recdata = res4.data.valueRanges[0].values;\n      let confdata = res5.data.valueRanges[0].values;\n      let deathdata = res6.data.valueRanges[0].values;\n      let rowsnewconf=[];\n      let rowsnewdeath=[];\n      let rowsnewrec=[];\n      let rowsconf=[];\n      let rowsdeath=[];\n      let  rowsrec = [];\n      let dropdownOptions1 = [];\n      let newcasesdata1 = [];\n      let newDeathsData1 = [];\n      let newRecovData1 = [];\n      let casesData1 = [];\n      let deathsData1 = [];\n      let recovData1=[];\n      for (let i = 1; i < newconfdata.length; i++) {\n        let newconobj={};\n        let newdeathobj={};\n        let newrecobj={};\n        let confobj={};\n        let deathobj={};\n        let recovobject={};\n        for (let j = 0; j < newconfdata[i].length; j++) {\n          newconobj[newconfdata[0][j]] = newconfdata[i][j];\n          newdeathobj[newdeathdata[0][j]] = newdeathdata[i][j];\n          newrecobj[newrecdata[0][j]] = newrecdata[i][j];\n          confobj[confdata[0][j]] = confdata[i][j];\n          deathobj[deathdata[0][j]] = deathdata[i][j];\n          recovobject[recdata[0][j]] = recdata[i][j];\n        }\n        rowsnewconf.push(newconobj)\n        rowsnewdeath.push(newdeathobj)\n        rowsnewrec.push(newrecobj)\n        rowsconf.push(confobj)\n        rowsdeath.push(deathobj)\n        rowsrec.push(recovobject)\n      }\n      let countries=(Object.keys(rowsnewrec[0]))\n      let country_list=countries.splice(1,31,1);\n      for (let i = 0; i < rowsnewconf.length; i++) {\n        dropdownOptions1.push(rowsnewconf[rowsnewconf.length-i-1].Date);\n        if(rowsnewdeath[i].World>0) {\n          newDeathsData1.push({\n            label: rowsnewdeath[i].Date,\n            value: rowsnewdeath[i].World,\n            displayValue: `${rowsnewdeath[i].World} cases`\n          }) \n        }\n      \n        if(rowsnewconf[i].World>0) {\n          newcasesdata1.push({\n            label: rowsnewconf[i].Date,\n            value: rowsnewconf[i].World,\n            displayValue: `${rowsnewconf[i].World} cases`,\n          })\n        }\n        if(rowsnewrec[i].World>0) {\n          newRecovData1.push({\n            label: rowsnewrec[i].Date,\n            value: rowsnewrec[i].World,\n            displayValue: `${rowsnewrec[i].World} cases`,\n          })\n        }\n        if(rowsdeath[i].World>0) {\n          deathsData1.push({\n            label: rowsdeath[i].Date,\n            value: rowsdeath[i].World,\n            displayValue: `${rowsdeath[i].World} cases`\n          })\n        }\n        if(rowsconf[i].World>0) {\n          casesData1.push({\n            label: rowsconf[i].Date,\n            value: rowsconf[i].World,\n            displayValue: `${rowsconf[i].World} cases`\n          })\n        }  \n        if(rowsrec[i].World>0) {\n          recovData1.push({\n            label: rowsrec[i].Date,\n            value: rowsrec[i].World,\n            displayValue: `${rowsrec[i].World} cases`\n          })\n        }        \n      }\n      this.setState(\n        {\n          newCases:rowsnewconf[rowsnewconf.length-1].World,\n          newDeaths:rowsnewdeath[rowsnewdeath.length-1].World,\n          newRecov:rowsnewrec[rowsnewrec.length-1].World,\n          totalCases:rowsconf[rowsconf.length-1].World,\n          totalDeaths:rowsdeath[rowsdeath.length-1].World,\n          totalRecov:rowsrec[rowsrec.length-1].World,\n          dropdownOptions: dropdownOptions1,\n          allplaces: country_list,\n          newCasesData:newcasesdata1,\n          newDeathsData: newDeathsData1,\n          newRecovData: newRecovData1, \n          casesData: casesData1,\n          deathsData: deathsData1,\n          recovData:recovData1,\n          selectedValue:dropdownOptions1[0],\n          selectedPlace:\"World\",\n          newconfdataall: rowsnewconf,\n          newdeathdataall: rowsnewdeath,\n          newrecdataall: rowsnewrec,\n          confdataall: rowsconf,\n          deathdataall: rowsdeath,\n          recdataall: rowsrec,      \n          loaded: true,  \n        },\n      ); \n    }))\n  }\n  updateDate = event => {\n    this.getData(event.value);\n    this.setState({ \n      selectedValue: event.value,\n    }, ()=>{\n      this.getData(this.state.selectedValue)\n    });\n  };\n  updatePlace = event => {\n    // this.getData(event.value);\n    // console.log(event)\n    this.setState({ \n      selectedPlace:event\n    }, ()=> {\n      this.getData(this.state.selectedPlace)\n    });\n  };\n  sidebarselect = (placename) => {\n    // console.log(placename)\n    this.setState({ \n      selectedValue: placename,\n    }, ()=>{\n      this.getData(this.state.selectedValue)\n    }); \n  }\n  getData = arg => {\n    let rowsnewconf=[];\n    let rowsnewdeath=[];\n    let rowsnewrec=[];\n    let rowsconf=[];\n    let rowsdeath=[];\n    let  rowsrec = [];\n    let newcasesdata1 = [];\n    let newDeathsData1 = [];\n    let newRecovData1 = [];\n    let casesData1 = [];\n    let deathsData1 = [];\n    let recovData1=[];\n    let place=this.state.selectedPlace;\n    let date=this.state.selectedValue;\n    let dates=this.state.dropdownOptions;\n    let date_pos=0;\n    let totCasesprevval=0;\n    let totDeathsprevval=0;\n    let totRecovprevval=0;  \n\n    for (let i=0;i<dates.length;i++) {\n      if (date===dates[i]) {\n        date_pos=dates.length-i-1\n      }\n    }\n    // console.log(date)\n    // console.log(place)\n    rowsnewconf=this.state.newconfdataall;\n    rowsnewdeath=this.state.newdeathdataall;\n    rowsnewrec=this.state.newrecdataall;\n    rowsconf= this.state.confdataall;\n    rowsdeath= this.state.deathdataall;\n    rowsrec=this.state.recdataall;\n    // console.log(rowsnewrec)\n    let countries=(Object.keys(rowsnewrec[0]))\n    let country_list=countries.splice(1,31,1);\n    let pos=0\n    for (let i=0;i<country_list.length;i++) {\n      if (country_list[i]===place) {\n        pos=i+1\n      }\n    }\n    for (let i = 0; i < rowsnewconf.length; i++) {\n      if(Object.values(rowsnewdeath[i])[pos]>0) {\n        newDeathsData1.push({\n          label: rowsnewdeath[i].Date,\n          value: Object.values(rowsnewdeath[i])[pos],\n          displayValue: `${Object.values(rowsnewdeath[i])[pos]} cases`\n        }) \n      }\n      if(Object.values(rowsnewconf[i])[pos]>0) {\n        newcasesdata1.push({\n          label: rowsnewconf[i].Date,\n          value: Object.values(rowsnewconf[i])[pos],\n          displayValue: `${Object.values(rowsnewconf[i])[pos]} cases`\n        }) \n      }    \n      if(Object.values(rowsnewrec[i])[pos]>0) {\n        newRecovData1.push({\n          label: rowsnewrec[i].Date,\n          value: Object.values(rowsnewrec[i])[pos],\n          displayValue: `${Object.values(rowsnewrec[i])[pos]} cases`\n        }) \n      } \n      if(Object.values(rowsdeath[i])[pos]>0) {\n        deathsData1.push({\n          label: rowsdeath[i].Date,\n          value: Object.values(rowsdeath[i])[pos],\n          displayValue: `${Object.values(rowsdeath[i])[pos]} cases`\n        }) \n      }\n      if(Object.values(rowsconf[i])[pos]>0) {\n        casesData1.push({\n          label: rowsconf[i].Date,\n          value: Object.values(rowsconf[i])[pos],\n          displayValue: `${Object.values(rowsconf[i])[pos]} cases`\n        }) \n      }\n      if(Object.values(rowsrec[i])[pos]>0) {\n        recovData1.push({\n          label: rowsrec[i].Date,\n          value: Object.values(rowsrec[i])[pos],\n          displayValue: `${Object.values(rowsrec[i])[pos]} cases`\n        }) \n      }\n    }\n    console.log(pos)\n    if (date_pos>0) {\n     totCasesprevval=Object.values(rowsconf[date_pos-1])[pos];\n     totDeathsprevval=Object.values(rowsdeath[date_pos-1])[pos];\n     totRecovprevval=Object.values(rowsrec[date_pos-1])[pos];\n    }\n    this.setState(\n      {\n        newCases:Object.values(rowsnewconf[date_pos])[pos],  \n        newDeaths:Object.values(rowsnewdeath[date_pos])[pos],\n        newRecov:Object.values(rowsnewrec[date_pos])[pos],\n        totalCases:Object.values(rowsconf[date_pos])[pos],\n        totalDeaths:Object.values(rowsdeath[date_pos])[pos],\n        totalRecov:Object.values(rowsrec[date_pos])[pos],\n        newCasesData:newcasesdata1,\n        newDeathsData: newDeathsData1,\n        newRecovData: newRecovData1, \n        casesData: casesData1,\n        deathsData: deathsData1,\n        recovData:recovData1,\n        newconfdataall: rowsnewconf,\n        newdeathdataall: rowsnewdeath,\n        newrecdataall: rowsnewrec,\n        confdataall: rowsconf,\n        deathdataall: rowsdeath,\n        recdataall: rowsrec, \n        totCasesprev: totCasesprevval,\n        totDeathsprev: totDeathsprevval,\n        totRecovprev: totRecovprevval,        \n      }\n    ); \n  };\n  handleStateChange (state) {\n    this.setState({menuOpen: state.isOpen})  \n  }  \n  render() {\n    return (\n            <Container className=\"full\">\n                {this.state.loaded?<Sidebar                   \n                  countryList={this.state.allplaces}\n                                  onChange={this.updatePlace}/>:\"\"}        \n                <Nav className=\"navbar expand-top is-dark is-main-text\" >\n                          <a className=\"navbar-nav is-main-text my-first-step\" href=\"/CovidWebApp\">\n                            Covid19 Cases\n                          </a>\n                </Nav>                \n                <main id=\"page-wrap\" style={{backgroundImage: `url(${covid})`}}> \n                <Container>\n                      {/* <Joyride disableOverlay=\"false\" steps={this.state.steps}/> */}\n                        <Nav className=\"navbar top nav-secondary is-light \">\n                          <Container className=\"navbar-nav ml-auto my-second-step\">\n                            <Dropdown\n                              className=\"pr-2 custom-dropdown\"\n                              options={this.state.dropdownOptions}\n                              onChange={this.updateDate}\n                              value={this.state.selectedValue}\n                              placeholder=\"Select an option\"\n                            />\n                          </Container>\n                        </Nav>\n                        <Container className=\"body\">\n                        <Container className=\"container-fluid pr-5 pl-5 pr-5 pl-5 pr-5 pl-5\">\n                          <Container className=\"row my-fourth-step\">\n                            <TileView \n                              name=\"New Cases Recorded\"\n                              data={this.state.newCases}\n                              place={this.state.selectedPlace}\n                              date={this.state.selectedValue}\n                              prev={0}\n                            />\n                            <TileView\n                              name=\"Total Confirmed Cases\"\n                              data={this.state.totalCases}\n                              place={this.state.selectedPlace}\n                              date={this.state.selectedValue}\n                              prev={this.state.totCasesprev}\n\n                            />\n                            <TileView\n                              name=\"New Deaths Recorded\"\n                              data={this.state.newDeaths}\n                              place={this.state.selectedPlace}\n                              date={this.state.selectedValue}\n                              prev={0}\n                            />\n                            <TileView\n                              name=\"Total Deaths Recorded\"\n                              data={this.state.totalDeaths}\n                              place={this.state.selectedPlace}\n                              date={this.state.selectedValue}\n                              prev={this.state.totDeathsprev}\n\n                            />\n                            <TileView \n                              name=\"New Recoveries\"\n                              data={this.state.newRecov}\n                              place={this.state.selectedPlace}\n                              date={this.state.selectedValue}\n                              prev={0}\n                            />\n                            <TileView\n                              name=\"Total Recoveries\"\n                              data={this.state.totalRecov}\n                              place={this.state.selectedPlace}\n                              date={this.state.selectedValue}\n                              prev={this.state.totRecovprev}\n\n                            />       \n                          </Container>\n                        <Container className=\"my-fifth-step\">\n                          <ChartTitle\n                            cap=\"New Cases Confirmed\"\n                            xname=\"New Cases\" \n                            yname=\"Date Reported\" \n                            data={this.state.newCasesData}\n                            sub={this.state.selectedPlace}\n                          />       \n                          <ChartTitle\n                            cap=\"Total Cases Confirmed\"\n                            xname=\"Total Cases Confirmed\" \n                            yname=\"Date Reported\" \n                            data={this.state.casesData}\n                            sub={this.state.selectedPlace}\n                          />\n                          <ChartTitle\n                            cap=\"New Deaths Reported\"\n                            xname=\"New Deaths Reported\" \n                            yname=\"Date Reported\" \n                            data={this.state.newDeathsData}\n                            sub={this.state.selectedPlace}\n                          />  \n                          <ChartTitle\n                            cap=\"Total Deaths Reported\"\n                            xname=\"Total Deaths Reported\" \n                            yname=\"Date Reported\" \n                            data={this.state.deathsData}\n                            sub={this.state.selectedPlace}\n                          />\n                          <ChartTitle\n                            cap=\"New Recoveries\"\n                            xname=\"New Recoveries\" \n                            yname=\"Date Reported\" \n                            data={this.state.newRecovData}\n                            sub={this.state.selectedPlace}\n                          />  \n                          <ChartTitle\n                            cap=\"Total Recoveries\"\n                            xname=\"Total Recoveries\" \n                            yname=\"Date Reported\" \n                            data={this.state.recovData}\n                            sub={this.state.selectedPlace}\n                          />\n                        </Container>\n                      </Container>\n                      </Container>\n                    </Container>\n                </main>\n          </Container>\n    );\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'react-dropdown/style.css';\nimport './style.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/covid.74121b1b.jpg\";"],"sourceRoot":""}